using System;
using System.Collections.Generic;
namespace Assinment15
{
    public class Sets
    {
        private static List<string> A = new List<string>();
        private static List<string> B = new List<string>();
        private static string input = "";

        public static void Main(string[] args)
        {
            int number = 0;

            while (input != "q")
            {
                PrintSet(A);
                PrintSet(B);

                Console.WriteLine("Enter a number to select an option \n1)Add to Set A\n2)Add to Set B" +
                    "\n3)A intersect B\n4)A Union B\n5)A difference B\n6)B difference A\n7)Power Set A" +
                    "\n8)Power Set B: (or enter q to quit)");
                number = InputCheck();
                if (number == 1 || number == 2)
                {
                    Console.Clear();
                    AddToList();
                }
                switch (number)
                {
                    case 3:
                        Console.Clear();
                        AUnionB();
                        Console.Read();
                        break;
                    case 4:
                        Console.Clear();
                        AIntersectsB();
                        Console.Read();
                        break;
                    case 5:
                        Console.Clear();
                        ADifferenceB();
                        Console.Read();
                        break;
                    case 6:
                        Console.Clear();
                        BDifferenceA();
                        Console.Read();
                        break;
                    case 7:
                        Console.Clear();
                        PowerSetA();
                        Console.Read();
                        break;
                    case 8:
                        Console.Clear();
                        PowerSetB();
                        Console.Read();
                        break;
                }

                Console.Clear();
            }
        }

        private static int InputCheck()
        {
            int num;
            input = Console.ReadLine(); if (input == "q") Environment.Exit(0); while (!int.TryParse(input, out num)) { Console.WriteLine("Error, incorrect entry: "); input = Console.ReadLine(); }
            return num;
        }
        public static void PrintSet(List<string> C)
        {
            string listname = "";
            if (C == A) listname = "A";
            else listname = "B";

            Console.WriteLine("List {0}:", listname);

            Console.Write("{");
            for (int i = 0; i < C.Count; i++)
            {
                Console.Write(C[i] + ", ");
            }

            Console.WriteLine("}");
        }

        public static void AddToList()
        {
            switch (input)
            {
                case "1":
                    Console.WriteLine("Enter item to add to list A:");
                    A.Add(Console.ReadLine());
                    break;
                case "2":
                    Console.WriteLine("Enter item to add to list B:");
                    B.Add(Console.ReadLine());
                    break;
            }
        }

        public static void AUnionB()
        {
            Console.WriteLine("Set A∪B:{");
            for (int i = 0; i < A.Count; i++)
            {
                for (int j = 0; j < B.Count; j++)
                {
                    if (A[i] == B[j]) { }
                    else
                    {
                        Console.Write(A[i] + ", ");
                    }
                }
            }

            for (int i = 0; i < B.Count; i++)
            {
                for (int j = 0; j < A.Count; j++)
                {
                    if (B[i] == A[j]) { }
                    else
                    {
                        Console.Write(B[i] + ", ");
                    }
                }
            }

            Console.WriteLine("}");
        }

        public static void AIntersectsB()
        {
            Console.WriteLine("Set A∩B:{");
            for (int i = 0; i < A.Count; i++)
            {
                for (int j = 0; j < B.Count; j++)
                {
                    if (A[i] == B[j])
                    {
                        Console.Write(A[i] + ", ");
                    }
                }
            }
            Console.WriteLine("}");
        }

        public static void ADifferenceB()
        {
            Console.WriteLine("Set A-B:{");
            for (int i = 0; i < A.Count; i++)
            {
                for (int j = 0; j < B.Count; j++)
                {
                    if (A[i] == B[j]) { } 
                    else
                    {
                        Console.Write(A[i] + ", ");
                    }
                }
            }

            Console.WriteLine("}");
        }

        public static void BDifferenceA()
        {
            Console.WriteLine("Set B-A:{");
            for (int i = 0; i < B.Count; i++)
            {
                for (int j = 0; j < A.Count; j++)
                {
                    if (B[i] == A[j]) { }
                    else
                    {
                        Console.Write(B[i] + ", ");
                    }
                }
            }

            Console.WriteLine("}");
        }

        public static void PowerSetA()
        {
            Console.WriteLine("Power set A:");

            for (int i = 0; i < Math.Pow(2,A.Count); i++)
            {

                Console.Write("{ ");

                for (int j = 0; j < A.Count; j++)
                {
                        Console.Write(A[j] + ", ");
                }

                Console.WriteLine("}");
            }

        }

        public static void PowerSetB()
        {
            int elem = 0, count = 0;
            Console.WriteLine("Power set B:{");

            for (int i = 0; i < Math.Pow(2, B.Count); i++)
            {
                Console.Write("{ ");

                for (int j = elem; j <= B.Count; j++)
                {
                    Console.Write(B[count++] + ", ");
                    if(count == B.Count)
                    {
                        count = 0;
                    }
                }
                elem++;
                count = elem;

                if (elem > B.Count)
                {
                    count++;
                    elem = 0;
                }

                Console.WriteLine("}");
            }
            
        }
    }
}
